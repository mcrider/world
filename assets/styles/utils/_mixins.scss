
@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@mixin blend {
	opacity: 1;
	mix-blend-mode: multiply;

	@supports not (mix-blend-mode: multiply) {
		opacity: $no-blend-opacity;
	}
}


@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// CSS Triangles
// https://gist.github.com/dominiak/7856586
//
@mixin triangle ($width: 15px, $direction: "down", $color: #333333) {
	@if $direction == "up" {
		width: 0;
		height: 0;
		border-left: $width / 2 solid transparent;
		border-right: $width / 2 solid transparent;
		border-bottom: $width / 2 solid $color;
	} @else if $direction == "left" {
		width: 0;
		height: 0;
		border-top: $width / 2 solid transparent;
		border-bottom: $width / 2 solid transparent;
		border-right: $width / 2 solid $color;
	} @else if $direction == "right" {
		width: 0;
		height: 0;
		border-top: $width / 2 solid transparent;
		border-bottom: $width / 2 solid transparent;
		border-left: $width / 2 solid $color;
	} @else {
		width: 0;
		height: 0;
		border-left: $width / 2 solid transparent;
		border-right: $width / 2 solid transparent;
		border-top: $width / 2 solid $color;
	}
}

@mixin gridWidths($small: 6, $medium: 12, $large: 12) {
	@include grid-column($small);

	@include grid-media($grid-medium) {
		@include grid-column($medium);
	}

	@include grid-media($grid-large) {
		@include grid-column($large);
	}
}
